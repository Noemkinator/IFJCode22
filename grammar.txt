---PROGRAM---
program => START STATEMENT_LIST_MAIN

START => <?php declare(strict_types=1);

STATEMENT_LIST_MAIN => EPSILON
STATEMENT_LIST_MAIN => STATEMENT_IF STATEMENT_LIST_MAIN
STATEMENT_LIST_MAIN => STATEMENT_EXPRESSION; STATEMENT_LIST_MAIN
STATEMENT_LIST_MAIN => STATEMENT_WHILE STATEMENT_LIST_MAIN
STATEMENT_LIST_MAIN => STATEMENT_RETURN STATEMENT_LIST_MAIN
STATEMENT_LIST_MAIN => STATEMENT_FUNCTION STATEMENT_LIST_MAIN

STATEMENT_LIST => EPSILON
STATEMENT_LIST => STATEMENT_IF STATEMENT_LIST
STATEMENT_LIST => STATEMENT_EXPRESSION; STATEMENT_LIST
STATEMENT_LIST => STATEMENT_WHILE STATEMENT_LIST
STATEMENT_LIST => STATEMENT_RETURN STATEMENT_LIST

---STATEMENT IF---
STATEMENT_IF  => if(EXPRESSION){STATEMENT_LIST} STATEMENT_IF2
STATEMENT_IF2 => EPSILON
STATEMENT_IF2 => elseif(EXPRESSION){STATEMENT_LIST} STATEMENT_IF2
STATEMENT_IF2 => STATEMENT_IF3
STATEMENT_IF3 => else{STATEMENT_LIST}

---STATEMENT_FUNCTION--
STATEMENT_FUNCTION => function IDENTIFIER(FUNCTION_PARAMETER_LIST):RETURN_TYPE{STATEMENT_LIST STATEMENT_RETURN}
FUNCTION_PARAMETER_LIST => TERM_TYPE IDENTIFIER FUNCTION_PARAMETER_LIST2
FUNCTION_PARAMETER_LIST2 => EPSILON
FUNCTION_PARAMETER_LIST2 => ,TERM_TYPE IDENTIFIER FUNCTION_PARAMETER_LIST2

---RETURN_TYPE---
RETURN_TYPE => void
RETURN_TYPE => int
RETURN_TYPE => string
RETURN_TYPE => float

---TERM_TYPE---
TERM_TYPE => int
TERM_TYPE => string
TERM_TYPE => bool
TERM_TYPE => float

---EXPRESSION_FUNCTION_CALL---
EXPRESSION_FUNCTION_CALL => IDENTIFIER(PARAMETER_LIST)
PARAMETER_LIST => STATEMENT_EXPRESSION PARAMETER_LIST2
PARAMETER_LIST2 => EPSILON
PARAMETER_LIST2 => ,STATEMENT_EXPRESSION PARAMETER_LIST2

---RETURN---
STATEMENT_RETURN => return STATEMENT_RETURN2
STATEMENT_RETURN2 => STATEMENT_EXPRESSION;
STATEMENT_RETURN2 => ;

---EXPRESSION_CONSTANT---

------CONSTANT_INTEGER------
STATEMENT_EXPRESSION => EXPRESSION_CONSTANT
EXPRESSION_CONSTANT => CONSTANT_NUMBER
CONSTANT_NUMBER => (0...9)CONSTANT_NUMBER2
CONSTANT_NUMBER2 => (0...9)CONSTANT_NUMBER2
CONSTANT_NUMBER2 => .CONSTANT_FLOAT
CONSTANT_NUMBER2 => EPSILON

------CONSTANT_FLOAT------
CONSTANT_FLOAT => (0...9)CONSTANT_FLOAT2
CONSTANT_FLOAT2 => (0...9)CONSTANT_FLOAT2
CONSTANT_FLOAT2 => EPSILON

------CONSTANT_STRING------ //TODO
EXPRESSION_CONSTANT => CONSTANT_STRING
CONSTANT_STRING => "CONSTANT_STRING2
CONSTANT_STRING2 => (0...9)|(A...Z)|(a)CONSTANT_STRING2 
CONSTANT_STRING2 => EPSILON

------CONSTANT_BOOL------
EXPRESSION_CONSTANT => EXPRESSION_CONSTANT_BOOL
EXPRESSION_CONSTANT_BOOL => true
EXPRESSION_CONSTANT_BOOL => false

STATEMENT_EXPRESSION => EXPRESSION_VARIABLE
EXPRESSION_VARIABLE =>  $IDENTIFIER

---EXPRESSION_UNARY_OPERATOR---
STATEMENT_EXPRESSION => EXPRESSION_UNARY_OPERATOR
EXPRESSION_UNARY_OPERATOR => !STATEMENT_EXPRESSION

---EXPRESSION_BINARY_OPERATOR---
STATEMENT_EXPRESSION => EXPRESSION_BINARY_OPERATOR
EXPRESSION_BINARY_OPERATOR => STATEMENT_EXPRESSION BINARY_OPERATOR STATEMENT_EXPRESSION

BINARY_OPERATOR => +
BINARY_OPERATOR => -
BINARY_OPERATOR => *
BINARY_OPERATOR => /
BINARY_OPERATOR => =
BINARY_OPERATOR => !==
BINARY_OPERATOR => <=
BINARY_OPERATOR => >=
BINARY_OPERATOR => <
BINARY_OPERATOR => >
BINARY_OPERATOR => &&
BINARY_OPERATOR => ||