# compile using: dot -Tpng fsm.gv -o fsm.png
digraph {
    node [shape=doublecircle]
    edge [fontsize=12.0,ranksep=1.0]
    entry [label="", shape=none]
    START [shape=circle]
    entry -> START
    START -> SEMICOLON [label=";"]
    START -> DOLLAR [label="$"]
    START -> QUESTION [label="?"]
    QUESTION -> DOUBLE_QUESTION [label="?"]
    START -> OPEN_BRACKET [label="("]
    START -> CLOSE_BRACKET [label=")"]
    START -> OPEN_CURLY_BRACKET [label="{"]
    START -> CLOSE_CURLY_BRACKET [label="}"]
    START -> PLUS [label="+"]
    START -> CONCATENATE [label="."]
    CONCATENATE -> CONCATENATE_ASIGN [label="="]
    PLUS -> INCREMENT [label="+"]
    PLUS -> PLUS_ASIGN [label="="]
    START -> MINUS [label="-"]
    MINUS -> DECREMENT [label="-"]
    MINUS -> MINUS_ASIGN [label="="]
    START -> MULTIPLY [label="*"]
    MULTIPLY -> MULTIPLY_ASIGN [label="="]
    START -> COMMA [label=","]
    START -> COLON [label=":"]
    START -> IDENTIFIER [label="[a-zA-Z_]"]
    IDENTIFIER -> IDENTIFIER [label="[a-zA-Z0-9_]"]
    START -> INTEGER [label="[0-9]"]
    INTEGER -> INTEGER [label="[0-9]"]
    START -> STRING_START [label="\""]
    STRING_START [shape=circle]
    STRING_START -> STRING_START [label="[^\"\\\\]"]
    STRING_START -> STRING [label="\""]
    STRING_START -> STRING_ESCAPE [label="\\"]
    STRING_ESCAPE [shape=circle]
    STRING_ESCAPE -> STRING_START [label="."]
    START -> DIVIDE [label="/"]
    DIVIDE -> DIVIDE_ASIGN [label="="]
    DIVIDE -> LINE_COMMENT [label="/"]
    DIVIDE -> MULTILINE_COMMENT [label="*"]
    LINE_COMMENT [shape=circle]
    LINE_COMMENT -> LINE_COMMENT [label="[^\\n]"]
    LINE_COMMENT -> COMMENT [label="\\n"]
    MULTILINE_COMMENT [shape=circle]
    MULTILINE_COMMENT -> MULTILINE_COMMENT [label="[^*]"]
    MULTILINE_COMMENT -> MULTILINE_COMMENT_END [label="*"]
    MULTILINE_COMMENT_END [shape=circle]
    MULTILINE_COMMENT_END -> COMMENT [label="/"]
    MULTILINE_COMMENT_END -> MULTILINE_COMMENT_END [label="*"]
    MULTILINE_COMMENT_END -> MULTILINE_COMMENT [label="[^*/]"]
    START -> ASSIGN [label="="]
    ASSIGN -> ALMOST_EQUALS [label="="]
    ALMOST_EQUALS [shape=circle]
    ALMOST_EQUALS -> EQUALS [label="="]
    START -> NEGATE [label="!"]
    NEGATE -> ALMOST_NOT_EQUALS [label="="]
    ALMOST_NOT_EQUALS [shape=circle]
    ALMOST_NOT_EQUALS -> NOT_EQUALS [label="="]
    START -> LESS [label="<"]
    LESS -> LESS_OR_EQUALS [label="="]
    START -> GREATER [label=">"]
    GREATER -> GREATER_OR_EQUALS [label="="]
    INTEGER -> FLOAT_PREDECIMAL [label="\\."]
    FLOAT_PREDECIMAL [shape=circle]
    FLOAT_PREDECIMAL -> FLOAT_DECIMAL [label="[0-9]"]
    FLOAT_DECIMAL -> FLOAT_DECIMAL [label="[0-9]"]
    FLOAT_DECIMAL -> FLOAT_PREEXPONENT [label="[eE]"]
    INTEGER -> FLOAT_PREEXPONENT [label="[eE]"]
    FLOAT_PREEXPONENT [shape=circle]
    FLOAT_PREEXPONENT -> FLOAT_EXPONENT [label="[0-9]"]
    FLOAT_PREEXPONENT -> FLOAT_EXPONENT_SIGN [label="[+-]"]
    FLOAT_EXPONENT_SIGN [shape=circle]
    FLOAT_EXPONENT_SIGN -> FLOAT_EXPONENT [label="[0-9]"]
    FLOAT_EXPONENT -> FLOAT_EXPONENT [label="[0-9]"]
    START -> ALMOST_AND [label="&"]
    ALMOST_AND [shape=circle]
    ALMOST_AND -> AND [label="&"]
    START -> ALMOST_OR [label="|"]
    ALMOST_OR [shape=circle]
    ALMOST_OR -> OR [label="|"]

    label="Finite state machine"
}