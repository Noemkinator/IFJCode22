#PROGRAM
program -> START STATEMENT_LIST_MAIN .

START -> <?php declare(strict_types=1); .

#MAIN_BODY_LIST
STATEMENT_LIST_MAIN -> EPSILON .
STATEMENT_LIST_MAIN -> STATEMENT_IF STATEMENT_LIST_MAIN .
STATEMENT_LIST_MAIN -> STATEMENT_EXPRESSION; STATEMENT_LIST_MAIN .
STATEMENT_LIST_MAIN -> STATEMENT_WHILE STATEMENT_LIST_MAIN .
STATEMENT_LIST_MAIN -> STATEMENT_FOR STATEMENT_LIST_MAIN .
STATEMENT_LIST_MAIN -> STATEMENT_RETURN STATEMENT_LIST_MAIN .
STATEMENT_LIST_MAIN -> STATEMENT_BREAK STATEMENT_LIST_MAIN .
STATEMENT_LIST_MAIN -> STATEMENT_CONTINUE STATEMENT_LIST_MAIN .
STATEMENT_LIST_MAIN -> STATEMENT_FUNCTION STATEMENT_LIST_MAIN .

#STATEMENT_IF
STATEMENT_IF  -> if( STATEMENT_EXPRESSION ){ STATEMENT_LIST } STATEMENT_IF2 .
STATEMENT_IF2 -> EPSILON .
STATEMENT_IF2 -> elseif( STATEMENT_EXPRESSION ){ STATEMENT_LIST } STATEMENT_IF2 .
STATEMENT_IF2 -> STATEMENT_IF3 .
STATEMENT_IF3 -> else{ STATEMENT_LIST } .

#STATEMENT_WHILE
STATEMENT_WHILE -> while( STATEMENT_EXPRESSION ){ STATEMENT_LIST } .

#STATEMENT_BREAK
STATEMENT_BREAK -> break STATEMENT_BREAK2  .
STATEMENT_BREAK2 -> CONSTANT_INTEGER .

#STATEMENT_CONTINUE
STATEMENT_CONTINUE -> continue STATEMENT_CONTINUE2  .
STATEMENT_CONTINUE2 -> CONSTANT_INTEGER .

#STATEMENT_FOR
STATEMENT_FOR -> for( STATEMENT_FOR2, STATEMENT_FOR2, STATEMENT_FOR2 ){ STATEMENT_LIST } .
STATEMENT_FOR2 -> STATEMENT_EXPRESSION .
STATEMENT_FOR2 -> EPSILON .

#STATEMENT_LIST
STATEMENT_LIST -> EPSILON .
STATEMENT_LIST -> STATEMENT_IF STATEMENT_LIST .
STATEMENT_LIST -> STATEMENT_EXPRESSION ; STATEMENT_LIST .
STATEMENT_LIST -> STATEMENT_WHILE STATEMENT_LIST .
STATEMENT_LIST -> STATEMENT_RETURN STATEMENT_LIST .

#RETURN
STATEMENT_RETURN -> return STATEMENT_RETURN2 .
STATEMENT_RETURN2 -> STATEMENT_EXPRESSION; .
STATEMENT_RETURN2 -> ; .

#STATEMENT_FUNCTION_DECLARATION .
STATEMENT_FUNCTION -> function IDENTIFIER( FUNCTION_PARAMETER_LIST ): RETURN_TYPE { STATEMENT_LIST STATEMENT_RETURN } .
FUNCTION_PARAMETER_LIST -> TERM_TYPE IDENTIFIER FUNCTION_PARAMETER_LIST2 .
FUNCTION_PARAMETER_LIST2 -> EPSILON .
FUNCTION_PARAMETER_LIST2 -> ,TERM_TYPE IDENTIFIER FUNCTION_PARAMETER_LIST2 .

#EXPRESSION_FUNCTION_CALL
STATEMENT_EXPRESSION -> EXPRESSION_FUNCTION_CALL .
EXPRESSION_FUNCTION_CALL -> IDENTIFIER( PARAMETER_LIST ) .
PARAMETER_LIST -> STATEMENT_EXPRESSION PARAMETER_LIST2 .
PARAMETER_LIST2 -> EPSILON .
PARAMETER_LIST2 -> ,STATEMENT_EXPRESSION PARAMETER_LIST2 .

#EXPRESSION_CONSTANT
STATEMENT_EXPRESSION -> EXPRESSION_CONSTANT .

#CONSTANT_INTEGER
EXPRESSION_CONSTANT -> CONSTANT_INTEGER .

#CONSTANT_FLOAT
EXPRESSION_CONSTANT -> CONSTANT_FLOAT .

#CONSTANT_STRING
EXPRESSION_CONSTANT -> CONSTANT_STRING .

#CONSTANT_BOOL
EXPRESSION_CONSTANT -> EXPRESSION_CONSTANT_BOOL .

STATEMENT_EXPRESSION -> EXPRESSION_VARIABLE .
EXPRESSION_VARIABLE ->  $ IDENTIFIER .

#EXPRESSION_UNARY_OPERATOR
STATEMENT_EXPRESSION -> EXPRESSION_UNARY_OPERATOR .
EXPRESSION_UNARY_OPERATOR -> UNARY_OPERATOR STATEMENT_EXPRESSION .

#EXPRESSION_BINARY_OPERATOR
STATEMENT_EXPRESSION -> EXPRESSION_BINARY_OPERATOR .
EXPRESSION_BINARY_OPERATOR -> STATEMENT_EXPRESSION BINARY_OPERATOR STATEMENT_EXPRESSION .

EPSILON -> .